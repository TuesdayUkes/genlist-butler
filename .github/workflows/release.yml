name: Bump Version and Release

on:
  workflow_dispatch:
    inputs:
      version_bump:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  bump-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"

    - name: Configure git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Bump version
      id: bump
      run: |
        # Get current version
        CURRENT_VERSION=$(grep '^version = ' pyproject.toml | cut -d'"' -f2)
        echo "Current version: $CURRENT_VERSION"
        
        # Parse version
        IFS='.' read -r major minor patch <<< "$CURRENT_VERSION"
        
        # Bump based on input
        case "${{ inputs.version_bump }}" in
          major)
            major=$((major + 1))
            minor=0
            patch=0
            ;;
          minor)
            minor=$((minor + 1))
            patch=0
            ;;
          patch)
            patch=$((patch + 1))
            ;;
        esac
        
        NEW_VERSION="$major.$minor.$patch"
        echo "New version: $NEW_VERSION"
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        
        # Update version in pyproject.toml
        sed -i "s/^version = \".*\"/version = \"$NEW_VERSION\"/" pyproject.toml
        
        # Update version in __init__.py
        sed -i "s/__version__ = \".*\"/__version__ = \"$NEW_VERSION\"/" src/genlist_butler/__init__.py

    - name: Commit and push version bump
      run: |
        git add pyproject.toml src/genlist_butler/__init__.py
        git commit -m "Bump version to ${{ steps.bump.outputs.new_version }}"
        git push

    - name: Create and push tag
      run: |
        git tag -a "v${{ steps.bump.outputs.new_version }}" -m "Release v${{ steps.bump.outputs.new_version }}"
        git push origin "v${{ steps.bump.outputs.new_version }}"

    - name: Create GitHub Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "v${{ steps.bump.outputs.new_version }}" \
          --title "Release v${{ steps.bump.outputs.new_version }}" \
          --notes "## Changes in v${{ steps.bump.outputs.new_version }}

        Auto-generated release with ${{ inputs.version_bump }} version bump.
        
        ### Installation
        \`\`\`bash
        pipx install genlist-butler==${{ steps.bump.outputs.new_version }}
        \`\`\`"
